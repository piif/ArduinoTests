# Initialisation
position_cible = 1000  # impulsions
vitesse_max = 50       # impulsions/ms
acceleration = 10      # impulsions/ms²

# Boucle principale
while True:
    position_actuelle = lire_roue_codeuse()
    vitesse_actuelle = calculer_vitesse(position_actuelle)

    # Boucle de position
    erreur_position = position_cible - position_actuelle
    consigne_vitesse = PID_position(erreur_position)

    # Limiter la consigne selon le profil de trajectoire
    consigne_vitesse = min(consigne_vitesse, vitesse_max)

    # Boucle de vitesse
    erreur_vitesse = consigne_vitesse - vitesse_actuelle
    pwm = PID_vitesse(erreur_vitesse)

    # Appliquer PWM au moteur
    moteur.set_pwm(pwm)

    # Condition d'arrêt
    if abs(erreur_position) < seuil and vitesse_actuelle ≈ 0:
        freiner_moteur()
        break
